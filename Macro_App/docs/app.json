[{"name":"app.R","content":"\r\n####httpuv::runStaticServer(\"docs\")\r\n####shinylive::export(appdir = \"../Macro_App/\", destdir = \"docs\")\r\n\r\n\r\n\r\n\r\n\r\nlibrary(shiny)\r\n#library(tidyverse) #ganze tidyverse klappt nicht mit shinylive \r\nlibrary(shinylive) #um shiny app auf static github page zu hosten \r\nlibrary(httpuv)\r\nlibrary(bslib)\r\n\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n  navset_tab(\r\n    nav_panel(title = \"Inflation\", \r\n              fluidRow(\r\n                column(6, plotOutput(\"inflation_plot\"))\r\n              )),\r\n    \r\n    nav_panel(title = \"GDP\", \"HIER KOMMT WAS HIN\"),\r\n    nav_panel(title = \"Unemployment\", \"Here comes the Unemployment content\")\r\n  )\r\n)\r\n\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n  source(\"plots_GDP.R\", local = TRUE)\r\n  \r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","type":"text"},{"name":"Macro_App.Rproj","content":"Version: 1.0\r\nProjectId: c26c8977-d156-4f66-887f-50c09df97041\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"},{"name":"data/annual_infation.csv","content":"Series Name,\"Country Name\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\"\r\n\"Inflation, consumer prices (annual %)\",\"Japan\",\"-0.341296928327554\",\"-0.676578683595175\",\"-0.740055504162738\",\"-0.923494026942321\",\"-0.256541816316025\",\"-0.00857338820310272\",\"-0.282946068764391\",\"0.249355116079085\",\"0.060039454498669\",\"0.795279630579839\",\"-0.127258844489754\",\"0.484199796126385\",\"0.989094598021848\",\"0.46877615938395\",\"-0.024995834027731\",\"-0.233352779398264\",\"2.49770278172255\",\"3.26813365933163\",\"2.73853681635241\"\r\n\"Inflation, consumer prices (annual %)\",\"Germany\",\"0.585433064230783\",\"1.44026838719741\",\"1.98385731334471\",\"1.42080615551526\",\"1.03422218628562\",\"1.66573696655992\",\"1.54691114751328\",\"1.57742642840563\",\"2.29834400700951\",\"0.514426137125456\",\"0.491747008445174\",\"1.50949485109628\",\"1.73216879766942\",\"1.44565976888253\",\"0.144877925813982\",\"3.06666666666673\",\"6.87257438551097\",\"5.94643667725823\",\"2.2564981433876\"\r\n\"Inflation, consumer prices (annual %)\",\"United States\",\"2.18802719697358\",\"3.37685727149929\",\"2.82617111885407\",\"1.58603162650601\",\"2.27009497336115\",\"2.67723669309172\",\"3.3927468454955\",\"3.22594410070404\",\"2.85267248150138\",\"0.118627135552451\",\"1.26158320570536\",\"2.13011000365961\",\"2.44258329692817\",\"1.81221007526021\",\"1.23358439630629\",\"4.69785886363742\",\"8.00279982052121\",\"4.11633838374488\",\"2.94952520485207\"\r\n\"Inflation, consumer prices (annual %)\",\"China\",\"-1.40147268276465\",\"0.347811226864587\",\"0.719125609120114\",\"-0.731970902350244\",\"1.12760348729637\",\"3.82463743108159\",\"1.77641407667571\",\"1.6494309945586\",\"4.81676767378834\",\"1.43702380935655\",\"2.00000182191943\",\"1.59313600071436\",\"2.07479039965576\",\"2.89923416358227\",\"2.41942189457782\",\"0.981015135544882\",\"1.97357555739051\",\"0.234836828893051\",\"0.218128938439177\"\r\n,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\r\n,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\r\n,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\r\nData from database: World Development Indicators,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\r\nLast Updated: 04/15/2025,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\r\n","type":"text"},{"name":"plots_GDP.R","content":"library(ggplot2)\r\nlibrary(tidyr)\r\nlibrary(dplyr)\r\n\r\n##mock plot erstellen \r\n\r\n# erzeugt plot und weist UI zu \r\n#output$inflation_germany <- renderPlot({\r\n  x <- 1:100\r\n  y <- 1:100\r\n  df <- data.frame(x = x, y = y)\r\n  \r\n  ggplot(data = df, mapping = aes(x = x, y = y)) +\r\n    geom_line() +\r\n    ggtitle(\"Inflation Rate Germany\")\r\n#})\r\n  \r\n  \r\n############Inflation USA, Deutschland, China, Japan DATA\r\n\r\ndf_inflation <- read.csv(\"data/annual_infation.csv\") \r\n\r\ndf_inflation <- df_inflation[-c(5:9), ] #überflüssige rows löschen\r\n\r\ndf_inflation <- df_inflation %>% \r\n  pivot_longer(\r\n    cols = starts_with(\"X\"),\r\n    names_to = \"Year\",\r\n    names_prefix = \"X\",\r\n    values_to = \"Inflation\"\r\n  ) %>% \r\n  select(-Series.Name) %>% \r\n  rename(\r\n    \"Country\" = \"Country.Name\" \r\n  )\r\n\r\n############### PLOT INFLATION \r\n\r\noutput$inflation_plot <- renderPlot({\r\n  \r\n  ggplot(data = df_inflation, mapping = aes(x = as.numeric(Year), y = Inflation, colour = Country)) +\r\n    geom_line(size = 1) +\r\n    labs(\r\n      title = \"Inflation Rate Over Time\",\r\n      subtitle = \"Annual Consumer Price Inflation\",\r\n      x = \"Year\",\r\n      y = \"Inflation Rate (%)\"\r\n    ) +\r\n    theme_classic() +\r\n    theme(\r\n      plot.title = element_text(face = \"bold\", size = 16),\r\n      plot.subtitle = element_text(size = 12),\r\n      legend.position = \"bottom\"\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\n\r\n\r\n  \r\n","type":"text"}]
